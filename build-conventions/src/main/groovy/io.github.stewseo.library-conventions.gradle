/*****************************************************************************
 *         plugins                                                      *
 *****************************************************************************/

plugins {
    id 'maven-publish'
    id 'io.github.stewseo.java-conventions'
    id 'signing'
}


ext {
    // json
    jacksonVersion = "2.12.3"
    jakartaVersion = '2.0.1'
    jakartaJsonBindVersion = '2.0.0'
    parssonVersion = '1.0.0'

    // elasticsearch
    elasticsearchVersion = "8.5.3"
}

def readmeCheck = tasks.register('readmeCheck', io.github.stewseo.ReadmeVerificationTask) {
    // Expect the README in the project directory
    readme = layout.projectDirectory.file("README.md")
    // README must contain a Service API header
    readmePatterns = ['^## Yelp Fusion Java Client$']
}

tasks.named('check') { dependsOn(readmeCheck) }

publishing {

    publications {
        library(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name "build-conventions"
            url 'build/local-repo'
        }
    }
}

task printRootProjectName {
    doLast {
        println 'printRootProjectName: ' + project.findProperty("PROJECT_VERSION").name
    }
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')

task printPathToCheckstyleConfigThrowsIfNotPresent {
    doLast {
        println 'findProperty("CHECKSTYLE_CONFIG"): ' + findProperty("CHECKSTYLE_CONFIG")
    }
}

task printGroovyDynamicNamePathToCheckstyleConfig {
    doLast{
        println 'Groovy dynamic name: ' + CHECKSTYLE_CONFIG
    }
}

task printPropertiesPathToCheckstyleConfig {
    doLast {
        println 'Map<String, ?> of project properties: ' + properties['CHECKSTYLE_CONFIG']
    }
}

task printProjectPropertyPathToCheckstyleConfig {
    doLast {
        println 'Accessing the value of a project property: ' + findProperty('CHECKSTYLE_CONFIG')
    }
}

