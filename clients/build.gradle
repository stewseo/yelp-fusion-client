/*****************************************************************************
 *         plugins                                                      *
 *****************************************************************************/

plugins {
    id 'library-conventions'
    id 'com.avast.gradle.docker-compose' version '0.14.3'
}

/*****************************************************************************
 *         java                                                             *
 *****************************************************************************/

javadoc {
    source = sourceSets.main.allJava
}

/*****************************************************************************
 *         :clients dependencies                                            *
 *****************************************************************************/

dependencies {

//    api files("../lib/lowlevel-restclient.jar")
//    api files("../lib/temporaldata-service.jar")

    api project(":lowlevel-restclient")
    api project(":temporaldata-service")

    implementation buildLibs.elasticsearch.java

    api buildLibs.jakarta.json.processing
    api buildLibs.jakarta.json.bind
    api buildLibs.jackson.core
    api buildLibs.jackson.databind
    api buildLibs.eclipse.parsson

    api buildLibs.ggjte

    testImplementation buildLibs.classgraph

    testImplementation("org.eclipse:yasson:2.0.4") {
        // Exclude Glassfish as we use Parsson (basically Glassfish renamed in the Jakarta namespace).
        exclude(group: "org.glassfish", module: "jakarta.json")
    }
}

/*****************************************************************************
 *         :testing                                                         *
 *****************************************************************************/

test {
    filter {
//        excludeTestsMatching "io.github.stewseo.clients.functional.*"
    }
}

/*****************************************************************************
 *         publishing                                                       *
 *****************************************************************************/

publishing {
    repositories {
        maven {
            name = "ossrh"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = POM_NAME
                artifactId = POM_ARTIFACT_ID
                setGroupId POM_GROUP_ID
                packaging = POM_PACKAGING
                description = POM_DESCRIPTION
                url = 'https://github.com/stewseo/yelp-fusion-client'

                licenses {
                    license {
                        name = LICENSE_NAME
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                    url = POM_SCM_URL
                }
                developers {
                    developer {
                        id = DEV_ID
                        name = DEV_NAME
                        email = DEV_EMAIL
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

