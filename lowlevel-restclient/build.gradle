plugins {
    id 'java-library'
}

group = 'io.github.stewseo'
version = '1.0.64'

java {
    sourceCompatibility = "17"
    targetCompatibility = "17"
}

repositories {
    mavenCentral()
}

ext {

    // json
    jacksonVersion = "2.12.3"
    jakartaVersion = '2.0.1'
    jakartaJsonBindVersion = '2.0.0'

    // commons
    commonscodecVersion = '1.11'
    commonsioVersion = '2.4'
    commonsloggingVersion = '1.2'

    // http components
    httpasyncclientVersion = '4.1.5'
    httpcoreVersion = '4.4.12'
    httpclientVersion = '4.5.10'

    // logging
    slf4jVersion = '2.0.4'
    logbackVersion = '1.4.1'
}



dependencies {
    // apache commons
    api("commons-io:commons-io:${commonsioVersion}")
    api("commons-codec:commons-codec:${commonscodecVersion}")

    // apache http components
    api "org.apache.httpcomponents:httpclient:${httpclientVersion}"
    api "org.apache.httpcomponents:httpcore:${httpcoreVersion}"
    api "org.apache.httpcomponents:httpasyncclient:${httpasyncclientVersion}"
    api "org.apache.httpcomponents:httpcore-nio:${httpcoreVersion}"

    // loggers
    api("org.slf4j:slf4j-api:${slf4jVersion}")
    api("ch.qos.logback:logback-classic:${logbackVersion}")
    api("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
    configurations.all {
        exclude group: "commons-logging", module: "commons-logging"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

repositories {
    mavenCentral()
}

jar {
    archiveFileName = 'lowlevel-restclient.jar'
    archiveVersion = '1.0.64'
    from {
        configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}





