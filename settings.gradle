plugins {
    id("com.gradle.enterprise") version("3.7.2")
}

rootProject.name = 'yelp-fusion-client'

include 'lowlevel-restclient', 'client-yelpfusion', 'temporaldata-service'

includeBuild 'build-conventions'

//List projects = [
//        'lowlevel-restclient', 'java-client', 'temporaldata-service'
//]

dependencyResolutionManagement {
    versionCatalogs {
        buildLibs {
            from(files("gradle/build.versions.toml"))
        }
    }
}

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

/**
 * Iterates over sub directories, looking for build.gradle, and adds a project if found
 * for that dir with the given path prefix. Note that this requires each level
 * of the dir hierarchy to have a build.gradle. Otherwise we would have to iterate
 * all files/directories in the source tree to find all projects.
 */

//void addSubProjects(String path, File dir) {
//    if (!dir.isDirectory()) return;
//    if (dir.name == 'buildSrc') return;
//    if (!new File(dir, 'build.gradle').exists()) return;
//    if (findProject(dir) != null) return;
//
//    final String projectName = "${path}:${dir.name}"
//
//    include projectName
//    for (File subdir : dir.listFiles()) {
//        addSubProjects(projectName, subdir)
//    }
//}

//include projects.toArray(new String[0])

//File extraProjects = new File(rootProject.projectDir.parentFile, "${rootProject.projectDir.name}-extra")
//if (extraProjects.exists()) {
//    for (File extraProjectDir : extraProjects.listFiles()) {
//        addSubProjects('', extraProjectDir)
//    }
//}

